name: build

on:
  push:
    branches:
    tags:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
        id: go

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and test
        run: |
          go test -v -timeout=100s -covermode=count -coverprofile=$GITHUB_WORKSPACE/coverage.out ./...
        env:
          GOFLAGS: "-mod=vendor"
          TZ: "Etc/UTC"

      - name: Run linters
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.3.1
        env:
          TZ: "Etc/UTC"

      - name: Install goveralls
        run: |
          go install github.com/mattn/goveralls@latest

      - name: Submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/coverage.out
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  goreleaser:
    needs: build
    runs-on: ubuntu-latest
    env: 
      goreleaser_version: "v2.11.2"
    steps:
      - name: Set up go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
        id: go

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get ref
        id: vars
        run: |
          echo ::set-output name=ref::$(echo ${GITHUB_REF} | cut -d'/' -f3)

      - name: Check GoReleaser config
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: ${{ env.goreleaser_version }}
          args: check .goreleaser.yml

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          distribution: goreleaser
          version: ${{ env.goreleaser_version }}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
